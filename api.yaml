swagger: "2.0"
info:
  title: Node Js API Project for physiotherapy
  description: API documentation for physiotherapy
  version: "1.0"

tags:
  - name: User
    description: Endpoints related to user management
  - name: Patient
    description: Endpoints related to patient operations
  - name: Payment
    description: Endpoints related to payment operations
  # - name: Admin
  #   description: Endpoints related to admin operations

# host: manipal-server.onrender.com
host: localhost:8000
schemes:
  # - https
  - http

consumes:
  - application/json

produces:
  - application/json

paths:
  /api/users:
    get:
      tags: # Assigning the 'user' tag to this endpoint
        - User
      summary: Get all users
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"

  /api/users/{id}:
    get:
      tags: # Assigning the 'user' tag to this endpoint
        - User
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          description: ID of the user to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
          schema:
            type: object
            properties:
              error:
                type: string
    patch:
      tags: # Assigning the 'user' tag to this endpoint
        - User
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          description: ID of the user to update
          required: true
          type: string
        - in: body
          name: user
          description: User data to update
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Update successful
          schema:
            $ref: "#/definitions/User"
    delete:
      tags: # Assigning the 'user' tag to this endpoint
        - User
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          type: string
      responses:
        200:
          description: Deletion successful
          schema:
            type: object
            properties:
              status:
                type: string
  /api/users/signup:
    post:
      tags: # Assigning the 'user' tag to this endpoint
        - User
      summary: Create a new user
      parameters:
        - in: body
          name: user
          description: User registration data
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: User created successfully
          schema:
            type: object
            properties:
              msg:
                type: string
              id:
                type: string

  /api/patient/all_patients/:
    get:
      tags: # Assigning the 'user' tag to this endpoint
        - Patient
      summary: Get all registered patients
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Patient"

  /api/patient/patient_registration:
    post:
      tags: # Assigning the 'patient' tag to this endpoint
        - Patient
      summary: Register a new patient
      description: Creates a new patient record
      consumes:
        # - multipart/form-data # Specify that the endpoint accepts multipart form data
        - application/json
      parameters:
        - in: formData
          name: photo
          description: The file to upload
          type: file
        - in: body
          name: patient
          description: Patient registration data
          schema:
            $ref: "#/definitions/Patient"
      responses:
        200:
          description: Successfully registered a new patient
        400:
          description: Bad request, check request payload

  /api/patient/{id}:
    get:
      tags: # Assigning the 'patient' tag to this endpoint
        - Patient
      summary: Get a patient by ID
      parameters:
        - name: id
          in: path
          description: ID of the patient to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Patient"
        404:
          description: Patient not found
          schema:
            type: object
            properties:
              error:
                type: string
    patch:
      tags: # Assigning the 'patient' tag to this endpoint
        - Patient
      summary: Update a patient by ID
      parameters:
        - name: id
          in: path
          description: ID of the patient to update
          required: true
          type: string
        - in: body
          name: patient
          description: Patient data to update
          required: true
          schema:
            $ref: "#/definitions/Patient"

      responses:
        200:
          description: Update successful
          examples:
            status: Update Successful
            patient: object
          schema:
            type: object
            properties:
              status:
                type: string
              patient:
                type: object
    delete:
      tags: # Assigning the 'patient' tag to this endpoint
        - Patient
      summary: Delete a patient by ID
      parameters:
        - name: id
          in: path
          description: ID of the patient to delete
          required: true
          type: string
      responses:
        200:
          description: Deletion successful
          schema:
            type: object
            properties:
              status:
                type: string

  /api/payment/all_payments/:
    get:
      summary: "Get all payments"
      tags:
        - "Payment"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PatientPayment"

  /api/payment/add_payment/:
    post:
      summary: "Create a new payment"
      tags:
        - "Payment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Payment details"
          required: true
          schema:
            $ref: "#/definitions/PatientPayment"

      responses:
        201:
          description: "Payment created successfully"
          schema:
            type: "object"
            properties:
              msg:
                type: "string"
              patient_id:
                type: "string"
                default: "Id of created payment"
            example:
              msg: success
              patient_id: "string"

        400:
          description: "Invalid request body"
          schema:
            type: "object"
            properties:
              msg:
                type: "string"
            example:
              - msg: all fields are required and amount should be greater than 0
              - msg: "Validation error: id not found "

        500:
          description: "server error"
          schema:
            type: "object"
            properties:
              msg:
                type: "string"
            example:
              msg: "Internal server error"

  /api/payment/{id}:
    get:
      tags:
        - Payment
      summary: Get a payment by ID
      parameters:
        - name: id
          in: path
          description: ID of the payment to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PatientPayment"
        404:
          description: payment not found
          schema:
            type: object
            properties:
              error:
                type: string

    patch:
      tags:
        - Payment
      summary: Update a payment by ID
      parameters:
        - name: id
          in: path
          description: ID of the payment to update
          required: true
          type: string
        - in: body
          name: payment
          description: payment data to update
          required: true
          schema:
            $ref: "#/definitions/PatientPayment"
      responses:
        200:
          description: Update successful
          schema:
            $ref: "#/definitions/PatientPayment"

    delete:
      tags:
        - Payment
      summary: Delete a payment by ID
      parameters:
        - name: id
          in: path
          description: ID of the payment to delete
          required: true
          type: string
      responses:
        200:
          description: Deletion successful
          schema:
            type: object
            properties:
              status:
                type: string

  /api/doctors/all_doctors/:
    get:
      tags:
        - doctor
      summary: Get all doctors
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Doctor"

  /api/doctors/add_doctor/:
    post:
      tags:
        - doctor
      summary: Create a new doctor
      parameters:
        - in: body
          name: doctor
          description: Doctor data to create
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        201:
          description: Doctor created successfully
          schema:
            $ref: "#/definitions/Doctor"

  /api/doctors/{id}:
    get:
      tags:
        - doctor
      summary: Get a doctor by ID
      parameters:
        - name: id
          in: path
          description: ID of the doctor to retrieve
          required: true
          type: string
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Doctor"
        404:
          description: Doctor not found
          schema:
            type: object
            properties:
              error:
                type: string

    patch:
      tags:
        - doctor
      summary: Update a doctor by ID
      parameters:
        - name: id
          in: path
          description: ID of the doctor to update
          required: true
          type: string
        - in: body
          name: doctor
          description: Doctor data to update
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        200:
          description: Update successful
          schema:
            $ref: "#/definitions/Doctor"

    delete:
      tags:
        - doctor
      summary: Delete a doctor by ID
      parameters:
        - name: id
          in: path
          description: ID of the doctor to delete
          required: true
          type: string
      responses:
        200:
          description: Deletion successful
          schema:
            type: object
            properties:
              status:
                type: string

  /api/patient/shoulder:
    get:
      tags:
        - shoulder
      summary: Get all soulders
      responses:
        "200":
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Soulder"

  /api/patient/shoulder/register_problem:
    post:
      tags:
        - shoulder
      summary: Create a new soulder
      parameters:
        - in: body
          name: body
          description: Soulder object that needs to be added
          required: true
          schema:
            $ref: "#/definitions/Soulder"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Soulder"
  /api/patient/shoulder/{id}:
    get:
      tags:
        - shoulder
      summary: Get a soulder by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: The soulder ID
      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/Soulder"
        "404":
          description: Soulder not found
    patch:
      tags:
        - shoulder
      summary: Update a soulder by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: The soulder ID
        - in: body
          name: body
          description: Soulder object that needs to be updated
          required: true
          schema:
            $ref: "#/definitions/Soulder"
      responses:
        "200":
          description: Updated successfully
          schema:
            $ref: "#/definitions/Soulder"
        "404":
          description: Soulder not found
    delete:
      tags:
        - shoulder
      summary: Delete a soulder by ID
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: The soulder ID
      responses:
        "204":
          description: Deleted successfully
        "404":
          description: Soulder not found
definitions:
  User:
    required:
      - firstName
      - email
      - userType
      - password
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      userType:
        type: string
      password:
        type: string
        format: password

  Patient:
    type: object
    properties:
      patientName:
        type: string
      gender:
        type: string
      age:
        type: integer
      dob:
        type: string
        format: date
      image:
        type: string
      contact:
        type: string
      email:
        type: string
      occupation:
        type: string
      HOPI:
        type: string
      familyHistory:
        type: string
      environmentalHistory:
        type: string
      HR:
        type: string
      BP:
        type: string
      RR:
        type: string
      examination:
        type: string
      spine:
        type: string
      specialTest:
        type: string
      deformity:
        type: string
      respiratoryType:
        type: string
      breathSound:
        type: string
      examinationExtremity:
        type: object
        properties:
          sensory:
            type: object
            properties:
              left:
                type: string
              right:
                type: string
          motor:
            type: object
            properties:
              left:
                type: string
              right:
                type: string
      gaitEvaluation:
        type: string
      functionalAssessment:
        type: string
      disability:
        type: string
      treatmentGoal:
        type: string
      tendonJerks:
        type: object
        properties:
          Knee:
            type: string
          ankle:
            type: string
          planter:
            type: string
          biceps:
            type: string
          triceps:
            type: string
          BR:
            type: string
          babinski:
            type: string
          clonus:
            type: string
      active:
        type: boolean
      IdProof:
        type: object
        properties:
          IdType:
            type: string
          Id:
            type: string
      bloodGroup:
        type: string
      weight:
        type: number
      height:
        type: number
      relative:
        type: string
      complaint:
        type: string
      referredTo:
        type: string
      address:
        type: object
        properties:
          country:
            type: string
          state:
            type: string
          district:
            type: string
          pin_code:
            type: string
          village:
            type: string

  PatientPayment:
    type: object
    properties:
      patientId:
        type: string
        description: The ID of the patient associated with the payment
      paymentType:
        type: string
        enum: ["daily", "15_days", "30_days"]
        description: The type of payment
      amount:
        type: number
        example: 100
        description: The amount of the payment
      paymentDate:
        type: string
        format: date-time
        description: The date of the payment
    required:
      - patientId
      - paymentType
      - amount

  Doctor:
    type: object
    properties:
      name:
        type: string
      specialty:
        type: string
      email:
        type: string
        format: email
      phone:
        type: integer
        format: int64
      image:
        type: string
        example: https://image_url
      address:
        type: string
      availability:
        type: object
        properties:
          days:
            type: array
            items:
              type: string
          hours:
            type: object
            properties:
              start:
                type: string
              end:
                type: string
    required:
      - name
      - phone
      - address

  Soulder:
    type: object
    properties:
      painAndStiffness:
        type: object
        properties:
          side:
            type: string
            enum: ["Right", "Left"]
          duration:
            type: object
            properties:
              years:
                type: integer
              months:
                type: integer
              weeks:
                type: integer
              days:
                type: integer
      Hopi:
        type: object
        properties:
          durationOfPain:
            type: object
            properties:
              years:
                type: integer
              months:
                type: integer
              weeks:
                type: integer
              days:
                type: integer
          natureOfPain:
            type: string
            enum: ["Continuous", "On Activity"]
          symptoms:
            type: string
            enum: ["Improving", "Worsening", "Remain Same"]
          onset:
            type: string
            enum: ["Gradual", "Sudden"]
          injury:
            type: boolean
          relievingFactor:
            type: string
            enum: ["Rest", "Medication"]
          injuryType:
            type: string
            enum:
              [
                "Fall",
                "RTA",
                "Throwing",
                "Lifting",
                "Any Movement of Shoulder Joint",
              ]
          aggravatingFactor:
            type: string
          intensityOfPainAtNight:
            type: string
            enum: ["Increased", "Decreased"]
          sleepDisturbance:
            type: boolean
      pastHistory:
        type: object
        properties:
          HTN:
            type: object
            properties:
              present:
                type: boolean
              medication:
                type: string
          DM2:
            type: object
            properties:
              present:
                type: boolean
              medication:
                type: string
                enum: ["On Regular Medications", "On Irregular Medications"]
          hypothyroidism:
            type: object
            properties:
              present:
                type: boolean
          rxHistory:
            type: string
      onExamination:
        type: object
        properties:
          shoulderSide:
            type: string
            enum: ["Right", "Left"]
          neurologicalDeficit:
            type: object
            properties:
              present:
                type: boolean
              type:
                type: string
                enum: ["Motor", "Sensory"]
          swelling:
            type: boolean
          muscleWasting:
            type: boolean
          capsularPatternAltered:
            type: boolean
          musclesTightness:
            type: boolean
          muscles:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  enum:
                    [
                      "Supraspinatus",
                      "Infraspinatus",
                      "Subscapularis",
                      "Teres Minor",
                      "Deltoid",
                      "Pectoral",
                    ]
                tenderness:
                  type: boolean
          ROM:
            type: object
            properties:
              side:
                type: string
          tone:
            type: string
          musclePower:
            type: string
          coordination:
            type: string
          gripAndPinch:
            type: string
      physiotherapyManagement:
        type: object
        properties:
          thumbDropTest:
            type: string
            enum: ["Positive", "Negative"]
          painfulArcTest:
            type: string
            enum: ["Positive", "Negative"]
          functionalAssessment:
            type: string
            enum: ["Dependent", "Independent"]
          difficultyIn:
            type: array
            items:
              type: object
              properties:
                activity:
                  type: string
                  enum:
                    [
                      "Clothing",
                      "Combing",
                      "Lifting Objects",
                      "Overhead activities",
                      "Grip & Pinch",
                    ]
          modalities:
            type: array
            items:
              type: object
              properties:
                modality:
                  type: string
                  enum:
                    [
                      "Moist Heat",
                      "SWD",
                      "Shock Wave",
                      "Combination Therapy",
                      "LASER",
                      "TENS",
                      "IFT",
                      "US",
                    ]
      exercisesPlan:
        type: object
        properties:
          gradedMobilization:
            type: boolean
          strengtheningOfRotatorCuffMuscles:
            type: boolean
          capsularStretchingExercises:
            type: boolean
          avoidJerkyMovements:
            type: boolean
          homeProgramGiven:
            type: boolean
          prognosisWellExplainedInPatientsWords:
            type: boolean
